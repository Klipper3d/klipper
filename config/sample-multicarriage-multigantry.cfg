# This file contains a configuration snippet for a multi extruder
# printer using 4 carriages and 2 gantries.

# See docs/Config_Reference.md for a description of parameters.

# Definition for the printer with the added gantry_map, as well
# as the optional carriage_homing_order and gantry_homing_order.
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 15000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 5.0
# Indicates T0 and T1 are on G0, and T2 and T3 are on G1
gantry_map: 0, 0, 1, 1
# Carriage homing order (optional parameter)
# Example has T1 1st, T0 2nd, T3 3rd, T2 4th
carriage_homing_order: 1, 0, 3, 2
# Gantry homing order (optional parameter)
# Example has G0 1st, G1 2nd
gantry_homing_order: 0, 1

# Definition for the primary carriage (holding the primary extruder)
[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar3
position_endstop: 0
position_max: 200
homing_speed: 50

# The definition for the primary extruder
[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

# Helper script to park the carriage (called from T# macros)
[gcode_macro PARK_extruder]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X0
    RESTORE_GCODE_STATE NAME=park0

# Activate the primary extruder
[gcode_macro T0]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_MULTI_CARRIAGE CARRIAGE=0
    SET_GCODE_OFFSET Y=0

# Definition for the secondary carriage and extruder1
[multi_carriage1]
axis: x
step_pin: ar16
dir_pin: ar17
enable_pin: !ar23
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar2
position_endstop: 200
position_max: 200
homing_speed: 50
safe_distance: 40

[extruder1]
step_pin: ar36
dir_pin: ar34
enable_pin: !ar30
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar11
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog15
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X200
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_MULTI_CARRIAGE CARRIAGE=1
    SET_GCODE_OFFSET Y=15

# Definition for the third carriage and extruder2
[multi_carriage2]
axis: x
step_pin: ar18
dir_pin: ar19
enable_pin: !ar25
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar4
position_endstop: 0
position_max: 200
homing_speed: 50
safe_distance: 40

[extruder2]
step_pin: ar27
dir_pin: ar29
enable_pin: !ar31
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar12
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog16
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

[gcode_macro PARK_extruder2]
gcode:
    SAVE_GCODE_STATE NAME=park2
    G90
    G1 X0
    RESTORE_GCODE_STATE NAME=park2

[gcode_macro T2]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder2
    SET_MULTI_CARRIAGE CARRIAGE=2
    SET_GCODE_OFFSET Y=0

# Definition for the fourth carriage and extruder3
[multi_carriage3]
axis: x
step_pin: ar20
dir_pin: ar21
enable_pin: !ar22
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar5
position_endstop: 200
position_max: 200
homing_speed: 50
safe_distance: 40

[extruder3]
step_pin: ar37
dir_pin: ar35
enable_pin: !ar32
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog17
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

[gcode_macro PARK_extruder3]
gcode:
    SAVE_GCODE_STATE NAME=park3
    G90
    G1 X200
    RESTORE_GCODE_STATE NAME=park3

[gcode_macro T3]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder3
    SET_MULTI_CARRIAGE CARRIAGE=3
    SET_GCODE_OFFSET Y=15

# A helper script to activate copy mode
[gcode_macro ACTIVATE_COPY_MODE]
gcode:
    {% set carriage = params.CARRIAGE|int %}
    {% if carriage == 0 %}
        { action_raise_error("Cannot set carriage 0 to COPY mode") }
    {% else %}
        {% set x_pos = params.X|default(100)|float %}
        SET_MULTI_CARRIAGE CARRIAGE=0 MODE=PRIMARY
        G1 X0
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        SET_MULTI_CARRIAGE CARRIAGE={carriage} MODE=PRIMARY
        G1 X{x_pos}
        SET_MULTI_CARRIAGE CARRIAGE={carriage} MODE=COPY
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder{carriage} MOTION_QUEUE=extruder
    {% endif %}

# A helper script to activate mirror mode
[gcode_macro ACTIVATE_MIRROR_MODE]
gcode:
    {% set carriage = params.CARRIAGE|int %}
    {% if carriage == 0 %}
        { action_raise_error("Cannot set carriage 0 to MIRROR mode") }
    {% else %}
        {% set x_pos = params.X|default(200)|float %}
        SET_MULTI_CARRIAGE CARRIAGE=0 MODE=PRIMARY
        G1 X0
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        SET_MULTI_CARRIAGE CARRIAGE={carriage} MODE=PRIMARY
        G1 X{x_pos}
        SET_MULTI_CARRIAGE CARRIAGE={carriage} MODE=MIRROR
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder{carriage} MOTION_QUEUE=extruder
    {% endif %}

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar62
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar63
position_endstop: 0
position_max: 200
homing_speed: 50

[multi_gantry1]
axis: y
step_pin: ar64
dir_pin: ar65
enable_pin: !ar66
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar67
position_endstop: 200
position_max: 200
homing_speed: 50
safe_distance: 40

# A helper script to activate copy mode for a gantry
[gcode_macro ACTIVATE_GANTRY_COPY_MODE]
description: Activate COPY mode for a specified gantry
gcode:
    {% set gantry = params.GANTRY|int %}
    {% set pos = params.POS|default(100)|float %}
    {% set gantry_map = printer.multi_carriage.gantry_map %}
    {% set gantry_axis = printer.multi_carriage.gantry_axis %}
    {% set gantry_carriage = None %}
    {% for i in range(gantry_map|length) %}
        {% if gantry_map[i] == gantry %}
            {% set gantry_carriage = i %}
            {% break %}
        {% endif %}
    {% endfor %}
    {% if gantry == 0 %}
        { action_raise_error("Cannot set gantry 0 to COPY mode") }
    {% elif gantry_carriage is None %}
        { action_raise_error("No carriage found for gantry " ~ gantry) }
    {% endif %}
    SET_MULTI_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 {gantry_axis}0
    SET_MULTI_CARRIAGE CARRIAGE={gantry_carriage} MODE=PRIMARY
    G1 {gantry_axis}{pos}
    SET_MULTI_GANTRY GANTRY={gantry} MODE=COPY

# A helper script to activate mirror mode for a gantry
[gcode_macro ACTIVATE_GANTRY_MIRROR_MODE]
description: Activate MIRROR mode for a specified gantry
gcode:
    {% set gantry = params.GANTRY|int %}
    {% set pos = params.POS|default(200)|float %}
    {% set gantry_map = printer.multi_carriage.gantry_map %}
    {% set gantry_axis = printer.multi_carriage.gantry_axis %}
    {% set carriage = None %}
    {% for i in range(gantry_map|length) %}
        {% if gantry_map[i] == gantry %}
            {% set carriage = i %}
            {% break %}
        {% endif %}
    {% endfor %}
    {% if gantry == 0 %}
        { action_raise_error("Cannot set gantry 0 to MIRROR mode") }
    {% elif carriage is None %}
        { action_raise_error("No carriage found for gantry " ~ gantry) }
    {% endif %}
    SET_MULTI_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 {gantry_axis}0
    SET_MULTI_CARRIAGE CARRIAGE={carriage} MODE=PRIMARY
    G1 {gantry_axis}{pos}
    SET_MULTI_GANTRY GANTRY={gantry} MODE=MIRROR

## An optional input shaper support
#[input_shaper]
## The section is intentionally empty
#
#[delayed_gcode init_shaper]
#initial_duration: 0.1
#gcode:
#    SET_MULTI_CARRIAGE CARRIAGE=3
#    SET_INPUT_SHAPER SHAPER_TYPE_X=<multi_carriage_shaper> SHAPER_FREQ_X=<multi_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
#    SET_MULTI_CARRIAGE CARRIAGE=2
#    SET_INPUT_SHAPER SHAPER_TYPE_X=<primary_carriage_shaper> SHAPER_FREQ_X=<primary_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
#    SET_MULTI_CARRIAGE CARRIAGE=1
#    SET_INPUT_SHAPER SHAPER_TYPE_X=<multi_carriage_shaper> SHAPER_FREQ_X=<multi_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
#    SET_MULTI_CARRIAGE CARRIAGE=0
#    SET_INPUT_SHAPER SHAPER_TYPE_X=<primary_carriage_shaper> SHAPER_FREQ_X=<primary_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>