# Config for firmware_retraction testing with Virtual SD Card module enabled
[virtual_sdcard]
path: test/klippy/sdcard_loop

[display_status]

[respond]
default_type: command

[firmware_retraction]
retract_length: 3.0
retract_speed: 45.0
unretract_extra_length: 0.0
unretract_speed: 45.0
z_hop_height: 0.4

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 0
position_max: 224
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 0
position_max: 220
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: ^PD3
position_endstop: 0
position_max: 200

[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 33.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 210
min_extrude_temp: 0

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: watermark
min_temp: 0
max_temp: 110

[mcu]
serial: /dev/ttyACM0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[gcode_arcs]
resolution: 0.1

[homing_override]
gcode:
    G28 X0
    G28 Y0
    G1 X112 Y110
    G28 Z0
    G1 Z8

[gcode_macro VERIFY_AXIS_POSITION]
gcode:
    {% set axis_name = params.AXIS %}
    {% set expected_position = params.EXPECTED|float %}
    {% set axisstate_verbose = False %}

    {% set current_axis_position = printer.gcode_move.position[axis_name] %}

    {% if current_axis_position != expected_position %}
        {action_raise_error("Wrong axis position for %s. Expected %f, got %f"
        % (axis_name, expected_position, current_axis_position))}
    {% else %}
      {% if axisstate_verbose %}
        M118 Axis {axis_name} OK!
      {% endif %}
    {% endif %}

[gcode_macro CHECK_RECTRACTION_CLEARED]
gcode:
  {% set retract_state = False %}
  {% set retract_state = printer.firmware_retraction.retract_state %}
  {% if retract_state == True %}
    {action_raise_error("Retraction should be cleared!")}
  {% endif%}
